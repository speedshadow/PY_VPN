"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
from dotenv import load_dotenv

# Carrega as variáveis de ambiente do arquivo .env
load_dotenv()

def get_env_variable(var_name, default=None):
    """
    Obtém o valor de uma variável de ambiente.
    - Se a variável estiver definida e não vazia, retorna seu valor.
    - Se a variável não estiver definida ou estiver vazia:
        - Se um 'default' for fornecido, retorna o 'default'.
        - Se nenhum 'default' for fornecido, levanta ValueError.
    """
    value = os.getenv(var_name)

    if value is None or value == "":  # Not set OR set to an empty string
        if default is not None:
            return default
        else:
            if value is None:
                raise ValueError(
                    f"A variável de ambiente '{var_name}' não está definida e nenhum valor padrão foi fornecido."
                )
            else:  # value == ""
                raise ValueError(
                    f"A variável de ambiente '{var_name}' está definida como uma string vazia e nenhum valor padrão foi fornecido para substituí-la."
                )
    return value # Variable was set and not empty

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Site Name (used for SEO defaults, etc.)
SITE_NAME = 'My Awesome Site'

# Sentry Configuration for Error Monitoring
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
        dsn=os.environ.get('SENTRY_DSN'),
    integrations=[
        DjangoIntegration(),
    ],
    # Set traces_sample_rate to 1.0 to capture 100% of transactions for performance monitoring.
    traces_sample_rate=1.0,
    # To associate users with errors, you can enable sending PII data.
    send_default_pii=True,
    # Set environment to distinguish between development, staging, and production.
    environment=get_env_variable('SENTRY_ENVIRONMENT', 'production'),
)

# Static and media files
STATIC_URL = '/static/'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' # Desativado para servir com Nginx
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# Configurações de Segurança
SECRET_KEY = get_env_variable('SECRET_KEY', 'django-insecure-dev-key-only-for-local')

# Debug e Hosts
DEBUG = get_env_variable('DEBUG', 'False').lower() == 'true'
ALLOWED_HOSTS = get_env_variable('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

# Adicionado para resolver erros de CSRF em produção com Nginx/proxy
# Confia em pedidos POST vindos do próprio servidor.
CSRF_TRUSTED_ORIGINS = [f"http://{host}" for host in ALLOWED_HOSTS]
# Adiciona https também, caso seja ativado no futuro
CSRF_TRUSTED_ORIGINS.extend([f"https://{host}" for host in ALLOWED_HOSTS])

# Adiciona as origens com a porta do Nginx para o ambiente local
if 'localhost' in ALLOWED_HOSTS:
    CSRF_TRUSTED_ORIGINS.append('http://localhost:8080')
if '127.0.0.1' in ALLOWED_HOSTS:
    CSRF_TRUSTED_ORIGINS.append('http://127.0.0.1:8080')

# --- Configurações de Segurança de Cookies e HTTPS ---
# Estas configurações dependem se o HTTPS está ativado ou não.
ENABLE_HTTPS = get_env_variable('ENABLE_HTTPS', 'False').lower() == 'true'

# Apenas define os cookies como seguros se o HTTPS estiver ativo.
# Este é o FIX para o erro de CSRF em sites HTTP.
SESSION_COOKIE_SECURE = ENABLE_HTTPS
CSRF_COOKIE_SECURE = ENABLE_HTTPS

# Configurações de Sessão
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = True



# Configurações de HTTPS (ativar em produção)
SECURE_SSL_REDIRECT = ENABLE_HTTPS
SECURE_SSL_REDIRECT = get_env_variable('ENABLE_HTTPS', 'False').lower() == 'true'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
SECURE_HSTS_SECONDS = 31536000  # 1 ano
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True


# Tailwind CSS configuration
TAILWIND_APP_NAME = 'theme'

# --- Tailwind NPM Path --- #
# Explicitly set the path to the npm executable to resolve lookup issues inside Docker.
# This was the missing key to solve the build problem.
NPM_BIN_PATH = "/usr/local/bin/npm"

# Application definition

INSTALLED_APPS = [
    'contact',
    # Third-party (theme)
    'admin_interface',
    'colorfield',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',

    # Third-party (other)
    'tailwind',
    'theme', # Added because TAILWIND_APP_NAME is 'theme'
    'axes',
    'django_ckeditor_5',
    'django_celery_beat',

    # Project apps
    'vpn',
    'categories',
    'coupons',
    'blog',
    'analytics',
    'settings',
    'custompages',
    'prize_wheel', # App para a Roda da Sorte
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.gzip.GZipMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'axes.middleware.AxesMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'analytics.middleware.AnalyticsMiddleware',
]

# Django Debug Toolbar settings (only in DEBUG mode)
if DEBUG:
    INSTALLED_APPS.extend(['debug_toolbar', 'django_browser_reload'])
    MIDDLEWARE.insert(3, 'debug_toolbar.middleware.DebugToolbarMiddleware') # Must come after GzipMiddleware
    MIDDLEWARE.append('django_browser_reload.middleware.BrowserReloadMiddleware') # Must come at the end
    INTERNAL_IPS = [
        "127.0.0.1",
    ]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.settings_context',
                'prize_wheel.context_processors.prize_wheel_prizes', # Added for prize wheel prizes
                'context_processors.static_version', # STATIC_VERSION for cache busting
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuração da Base de Dados
# Usa DATABASE_URL se estiver definida, senão usa SQLite local
DATABASES = {
    'default': dj_database_url.config(
        default=f'sqlite:///{BASE_DIR / "db.sqlite3"}',
        conn_max_age=600
    )
}


# Password validation and hashing
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Autenticação com proteção Axes
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Configurações específicas do Django Axes
AXES_ENABLE_ACCESS_FAILURE_LOG = True # GARANTE que os logs de falha individuais são criados

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Directorios onde o Django procura ficheiros estáticos adicionais
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Directorio para onde o collectstatic copia todos os ficheiros estáticos para produção
STATIC_ROOT = BASE_DIR / 'staticfiles'

SITE_ID = 1

# Django CKEditor 5 configuration
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading', '|',
            'bold', 'italic', 'underline', 'strikethrough', '|',
            'link', '|',
            'bulletedList', 'numberedList', 'todoList', '|',
            'outdent', 'indent', '|',
            'alignment', '|',
            'blockQuote', 'codeBlock', 'insertTable', 'imageUpload', 'mediaEmbed', '|',
            'undo', 'redo', '|',
            'sourceEditing'
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative', 'imageTitle', '|',
                'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight', '|',
                'linkImage'
            ],
            'styles': ['alignLeft', 'alignCenter', 'alignRight']
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells',
                'tableProperties', 'tableCellProperties'
            ]
        },
        # 'language': 'en', # You can set your language here, e.g., 'pt-br'
    },
    'extends': { # This is the config_name we used for some fields
        'toolbar': [
            'heading', '|',
            'bold', 'italic', 'underline', 'strikethrough', '|',
            'link', '|',
            'bulletedList', 'numberedList', 'todoList', '|',
            'outdent', 'indent', '|',
            'alignment', '|',
            'blockQuote', 'codeBlock', 'insertTable', 'imageUpload', 'mediaEmbed', '|',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
            'highlight', '|',
            'horizontalLine', 'pageBreak', '|',
            'specialCharacters', 'removeFormat', '|',
            'undo', 'redo', '|',
            'sourceEditing'
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative', 'imageTitle', '|',
                'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight', '|',
                'linkImage'
            ],
            'styles': ['alignLeft', 'alignCenter', 'alignRight']
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells',
                'tableProperties', 'tableCellProperties'
            ]
        },
        # 'language': 'en', # Or your preferred language
    }
}

# Path for uploaded files relative to MEDIA_ROOT
CKEDITOR_5_UPLOAD_PATH = "uploads/"
# CKEDITOR_5_BROWSE_URL = None # Optional: URL for browsing uploaded files



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
